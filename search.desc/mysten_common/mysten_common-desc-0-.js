searchState.loadedDescShard("mysten_common", 0, "A moving average that decays over time so that the average …\nReturns the argument unchanged.\nGet the current value of the moving average.\nCalls <code>U::from(self)</code>.\nCreate a new DecayMovingAverage with an initial value and …\nOverride the moving average with a new value, bypassing …\nUpdate the moving average with a new value.\nAssert that a line of code is reached at least once. The …\nAssert that a line of code is never reached. The …\nConstruct a <code>serde_json::Value</code> from a JSON literal.\nReturns the argument unchanged.\nGet a random number generator.\nCalls <code>U::from(self)</code>.\nCreates a temporary directory with random name. Ensure the …\nLow level utilities shared across Sui.\nThis structure contains a cell for a single value. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets the value and notifies waiters. Return error if …\nNotify once allows waiter to register for certain …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNotify all waiters, present and future about event\nAwaits for <code>notify</code> method to be called.\nRegistration resolves to the value but also provides safe …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAsynchronously notifies waiters and return number of …")